# Ensure pip is upgraded to version 25.0.1
import os
import subprocess

subprocess.check_call([os.sys.executable, "-m", "pip", "install", "--upgrade", "pip==25.0.1"])

# Ensure scikit-learn is installed before running this script
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
df = pd.read_csv(r"C:\Users\sansk\Documents\Codveda technologies\Cleaned_Stock_Prices.csv")

# Select features and target variable
# Example: Predicting 'close' based on 'open', 'high', 'low', and 'volume'
X = df[['open', 'high', 'low', 'volume']]  # Features
y = df['close']  # Target variable

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Interpret the coefficients
print("\n--- Coefficients and Intercept ---")
print(f"Intercept: {model.intercept_}")
coefficients = pd.DataFrame({'Feature': X.columns, 'Coefficient': model.coef_})
print(coefficients)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\n--- Model Evaluation ---")
print(f"Mean Squared Error (MSE): {mse}")
print(f"R-squared (RÂ²): {r2}")
